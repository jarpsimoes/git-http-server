name: Docker Image CI

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*"
    paths-ignore:
      - "*.md"
  pull_request:
    branches: [ "main" ]

env:
  ACCESS_TOKEN: ${{ secrets.GIT_ACCESS_TOKEN_TESTS }}
  ACCESS_USERNAME: html_sample
  CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_TOKEN }}
  COVERALLS_REPO_TOKEN: ${{ secrets.CODECOV_TOKEN }}
jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v3.4.0
        with:
          go-version: 1.17.x
      - name: Checkout code
        uses: actions/checkout@v3.1.0
      - name: Calc coverage
        run: |
          cd src
          go get github.com/axw/gocov/gocov
          go get github.com/AlekSi/gocov-xml
          go test -v ./... -covermode=count -coverprofile=coverage.out
          gocov convert coverage.out | gocov-xml > coverage.xml
      - name: Codecov Reports
        uses: codecov/codecov-action@v3.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: src/coverage.lcov
          fail_ci_if_error: true 
                  
  build:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: coverage
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
      - name: Docker Login
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_REGISTRY_GITHUB_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_GITHUB_TOKEN }}

      - name: Docker Tag
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}

      - name: Build the Docker image
        run: |
          docker build . --file Dockerfile --tag ghcr.io/jarpsimoes/git_http_server:${{ steps.vars.outputs.tag }}

      - name: Push Image
        run: |
          docker push ghcr.io/jarpsimoes/git_http_server:${{ steps.vars.outputs.tag }}